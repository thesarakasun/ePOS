/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package epos2;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.*;
import java.awt.Dimension;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import java.text.SimpleDateFormat;

import java.io.File;


//import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import javax.swing.table.TableModel;
import java.io.FileOutputStream;




/**
 *
 * @author admin
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        // Check if the user is logged in
        if (!SessionManager.isLoggedIn) {
            JOptionPane.showMessageDialog(null, "You must log in first.", "Access Denied", JOptionPane.ERROR_MESSAGE);
            new Login().setVisible(true); // Redirect to login
            this.dispose(); // Close the main page
            return;
        }
        
        initComponents();
         populateGoodTypeComboBox();
         populateGoodTypeComboBox2();
         setupCartTable();  // Call method to setup the cart table
         setupCartTable2();
        showBarChart();
        showLineChart();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        from_date = new com.raven.datechooser.DateChooser();
        to_date = new com.raven.datechooser.DateChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Stock_Analysis = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Invoice = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Good_Receive = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Good_Issue = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Faulty_Return = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        Reports = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTabbedPanel = new javax.swing.JTabbedPane();
        jp1 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        StockAnal = new javax.swing.JPanel();
        SalesProfit = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jp2 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField11 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        printButton = new javax.swing.JButton();
        jp3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        quantityField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        revieveGood = new javax.swing.JButton();
        reset1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        goodTypeComboBox = new javax.swing.JComboBox<>();
        productComboBox = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jp4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        addButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        issueGoods = new javax.swing.JButton();
        reset2 = new javax.swing.JButton();
        goodTypeComboBox2 = new javax.swing.JComboBox<>();
        productComboBox2 = new javax.swing.JComboBox<>();
        quantityField2 = new javax.swing.JTextField();
        stockCount = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jp5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jp6 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        transaction = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        To_Date = new javax.swing.JTextField();
        From_Date = new javax.swing.JTextField();
        tuserid = new javax.swing.JTextField();
        transbuttton1 = new javax.swing.JButton();
        transScroll = new javax.swing.JScrollPane();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        Sales = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        monthCombo = new javax.swing.JComboBox<>();
        salesSub = new javax.swing.JButton();
        salesAmt = new javax.swing.JLabel();
        yearSales = new javax.swing.JTextField();

        from_date.setTextRefernce(From_Date);
        from_date.setVerifyInputWhenFocusTarget(false);

        to_date.setTextRefernce(To_Date);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ePOS");
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 0, 153));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 39)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ePOS");

        Stock_Analysis.setBackground(new java.awt.Color(89, 0, 89));
        Stock_Analysis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Stock_AnalysisMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Stock_AnalysisMousePressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Stock Analysis");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/graph.png"))); // NOI18N

        javax.swing.GroupLayout Stock_AnalysisLayout = new javax.swing.GroupLayout(Stock_Analysis);
        Stock_Analysis.setLayout(Stock_AnalysisLayout);
        Stock_AnalysisLayout.setHorizontalGroup(
            Stock_AnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Stock_AnalysisLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        Stock_AnalysisLayout.setVerticalGroup(
            Stock_AnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Stock_AnalysisLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Stock_AnalysisLayout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jLabel6))
        );

        Invoice.setBackground(new java.awt.Color(153, 0, 153));
        Invoice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InvoiceMouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Invoice");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/invoice.png"))); // NOI18N

        javax.swing.GroupLayout InvoiceLayout = new javax.swing.GroupLayout(Invoice);
        Invoice.setLayout(InvoiceLayout);
        InvoiceLayout.setHorizontalGroup(
            InvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InvoiceLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        InvoiceLayout.setVerticalGroup(
            InvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InvoiceLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InvoiceLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        Good_Receive.setBackground(new java.awt.Color(153, 0, 153));
        Good_Receive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Good_ReceiveMouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Good Receive");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/good received.png"))); // NOI18N

        javax.swing.GroupLayout Good_ReceiveLayout = new javax.swing.GroupLayout(Good_Receive);
        Good_Receive.setLayout(Good_ReceiveLayout);
        Good_ReceiveLayout.setHorizontalGroup(
            Good_ReceiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Good_ReceiveLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        Good_ReceiveLayout.setVerticalGroup(
            Good_ReceiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Good_ReceiveLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel4))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Good_ReceiveLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(20, 20, 20))
        );

        Good_Issue.setBackground(new java.awt.Color(153, 0, 153));
        Good_Issue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Good_IssueMouseClicked(evt);
            }
        });

        jLabel11.setBackground(new java.awt.Color(153, 0, 153));
        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Good Issue");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/issued.png"))); // NOI18N

        javax.swing.GroupLayout Good_IssueLayout = new javax.swing.GroupLayout(Good_Issue);
        Good_Issue.setLayout(Good_IssueLayout);
        Good_IssueLayout.setHorizontalGroup(
            Good_IssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Good_IssueLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        Good_IssueLayout.setVerticalGroup(
            Good_IssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Good_IssueLayout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jLabel7))
            .addGroup(Good_IssueLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Faulty_Return.setBackground(new java.awt.Color(153, 0, 153));
        Faulty_Return.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Faulty_ReturnMouseClicked(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Faulty Return");

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/return.png"))); // NOI18N

        javax.swing.GroupLayout Faulty_ReturnLayout = new javax.swing.GroupLayout(Faulty_Return);
        Faulty_Return.setLayout(Faulty_ReturnLayout);
        Faulty_ReturnLayout.setHorizontalGroup(
            Faulty_ReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Faulty_ReturnLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel20)
                .addGap(18, 18, 18)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        Faulty_ReturnLayout.setVerticalGroup(
            Faulty_ReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Faulty_ReturnLayout.createSequentialGroup()
                .addComponent(jLabel20)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(Faulty_ReturnLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Reports.setBackground(new java.awt.Color(153, 0, 153));
        Reports.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReportsMouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Reports");

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/report.png"))); // NOI18N

        javax.swing.GroupLayout ReportsLayout = new javax.swing.GroupLayout(Reports);
        Reports.setLayout(ReportsLayout);
        ReportsLayout.setHorizontalGroup(
            ReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        ReportsLayout.setVerticalGroup(
            ReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel21))
            .addGroup(ReportsLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logout.png"))); // NOI18N
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Logout");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Invoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Stock_Analysis, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Good_Receive, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Good_Issue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Faulty_Return, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Reports, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(96, 96, 96))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel22))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(Stock_Analysis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Invoice, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Good_Receive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Good_Issue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Faulty_Return, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Reports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addGap(65, 65, 65))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 800));

        jTabbedPanel.setBackground(new java.awt.Color(255, 255, 255));

        jp1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel19.setFont(new java.awt.Font("Helvetica Neue", 1, 35)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(153, 0, 204));
        jLabel19.setText("STOCK ANALYSIS");

        StockAnal.setBackground(new java.awt.Color(255, 255, 255));
        StockAnal.setLayout(new java.awt.BorderLayout());

        SalesProfit.setBackground(new java.awt.Color(255, 255, 255));
        SalesProfit.setLayout(new java.awt.BorderLayout());

        jLabel37.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jp1Layout = new javax.swing.GroupLayout(jp1);
        jp1.setLayout(jp1Layout);
        jp1Layout.setHorizontalGroup(
            jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(SalesProfit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(StockAnal, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE))
                    .addGroup(jp1Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(457, 457, 457)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(588, Short.MAX_VALUE))
        );
        jp1Layout.setVerticalGroup(
            jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(18, 18, 18)
                .addComponent(StockAnal, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SalesProfit, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPanel.addTab("Stock_Analysis", jp1);

        jp2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 1, 35)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(153, 0, 204));
        jLabel15.setText("INVOICE");

        jTextField1.setBackground(java.awt.Color.lightGray);
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setText("Enter Invoice No..");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("VIEW");
        jButton1.setToolTipText("");

        jButton3.setBackground(new java.awt.Color(51, 153, 255));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("DOWNLOAD");
        jButton3.setToolTipText("");

        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );

        printButton.setBackground(new java.awt.Color(51, 204, 255));
        printButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp2Layout = new javax.swing.GroupLayout(jp2);
        jp2.setLayout(jp2Layout);
        jp2Layout.setHorizontalGroup(
            jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp2Layout.createSequentialGroup()
                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jp2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1279, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp2Layout.createSequentialGroup()
                        .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp2Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jButton4)
                                .addGap(18, 18, 18)
                                .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jp2Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(105, 105, 105))
        );
        jp2Layout.setVerticalGroup(
            jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel15)
                .addGap(35, 35, 35)
                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton4)
                    .addComponent(printButton))
                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3))
                    .addGroup(jp2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        jTabbedPanel.addTab("Invoice", jp2);

        jp3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Helvetica Neue", 1, 35)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(153, 0, 204));
        jLabel16.setText("GOOD RECEIVE");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 204));
        jLabel2.setText("Product");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel24.setFont(new java.awt.Font("BiomeW01-SemiBold", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(153, 0, 204));
        jLabel24.setText("Cart");

        quantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityFieldActionPerformed(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addButton.setText("Add to Cart");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        revieveGood.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        revieveGood.setText("Recieve Goods to Stock");
        revieveGood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revieveGoodActionPerformed(evt);
            }
        });

        reset1.setBackground(new java.awt.Color(255, 0, 0));
        reset1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        reset1.setForeground(new java.awt.Color(255, 255, 255));
        reset1.setText("Reset");
        reset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(revieveGood, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(reset1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(revieveGood, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 475, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 207, Short.MAX_VALUE)
        );

        goodTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        goodTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goodTypeComboBoxActionPerformed(evt);
            }
        });

        productComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        productComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productComboBoxActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(153, 0, 204));
        jLabel34.setText("Select good type");

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(153, 0, 204));
        jLabel35.setText("Quantity");

        javax.swing.GroupLayout jp3Layout = new javax.swing.GroupLayout(jp3);
        jp3.setLayout(jp3Layout);
        jp3Layout.setHorizontalGroup(
            jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3Layout.createSequentialGroup()
                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel16)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 475, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jp3Layout.createSequentialGroup()
                        .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(goodTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(productComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 1067, Short.MAX_VALUE))
        );
        jp3Layout.setVerticalGroup(
            jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel16)
                .addGap(21, 21, 21)
                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goodTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPanel.addTab("Good_Receive", jp3);

        jp4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel17.setFont(new java.awt.Font("Helvetica Neue", 1, 35)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(153, 0, 204));
        jLabel17.setText("GOOD ISSUE");

        jButton2.setBackground(new java.awt.Color(51, 153, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Search");
        jButton2.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 204));
        jLabel3.setText("Search For Product to Issue");

        addButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addButton2.setText("Add to Cart");
        addButton2.setToolTipText("");
        addButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButton2ActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel26.setFont(new java.awt.Font("BiomeW01-SemiBold", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(153, 0, 204));
        jLabel26.setText("Cart");

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 175, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        issueGoods.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        issueGoods.setText("Issue Goods");
        issueGoods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueGoodsActionPerformed(evt);
            }
        });

        reset2.setBackground(new java.awt.Color(255, 0, 0));
        reset2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        reset2.setForeground(new java.awt.Color(255, 255, 255));
        reset2.setText("Reset");
        reset2.setMaximumSize(new java.awt.Dimension(98, 23));
        reset2.setMinimumSize(new java.awt.Dimension(98, 23));
        reset2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel26)
                        .addGap(18, 18, 18)
                        .addComponent(issueGoods, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reset2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 20, Short.MAX_VALUE)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reset2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel26)
                                .addComponent(issueGoods, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(374, 374, 374))
        );

        goodTypeComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        goodTypeComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goodTypeComboBox2ActionPerformed(evt);
            }
        });

        productComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        productComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productComboBox2ActionPerformed(evt);
            }
        });

        quantityField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityField2ActionPerformed(evt);
            }
        });

        stockCount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(153, 0, 204));
        jLabel25.setText("Quantity");

        javax.swing.GroupLayout jp4Layout = new javax.swing.GroupLayout(jp4);
        jp4.setLayout(jp4Layout);
        jp4Layout.setHorizontalGroup(
            jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp4Layout.createSequentialGroup()
                .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addGroup(jp4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jp4Layout.createSequentialGroup()
                                .addComponent(quantityField2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jp4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp4Layout.createSequentialGroup()
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jp4Layout.createSequentialGroup()
                        .addComponent(goodTypeComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(productComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(stockCount, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 757, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
        );
        jp4Layout.setVerticalGroup(
            jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp4Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(goodTypeComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(productComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(stockCount, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quantityField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPanel.addTab("Faulty_Return", jp4);

        jp5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setFont(new java.awt.Font("Helvetica Neue", 1, 35)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(153, 0, 204));
        jLabel14.setText("FAULTY RETURN");

        jTextField6.setBackground(java.awt.Color.lightGray);
        jTextField6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(255, 255, 255));

        jTextField7.setBackground(java.awt.Color.lightGray);
        jTextField7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(255, 255, 255));

        jTextField8.setBackground(java.awt.Color.lightGray);
        jTextField8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTextField8.setForeground(new java.awt.Color(255, 255, 255));
        jTextField8.setText("Huawei");

        jButton5.setBackground(new java.awt.Color(51, 153, 255));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Search");
        jButton5.setToolTipText("");

        jButton6.setBackground(new java.awt.Color(51, 153, 255));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Proceed");
        jButton6.setToolTipText("");

        jButton7.setBackground(new java.awt.Color(51, 153, 255));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 8)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Proceed to Checkout");
        jButton7.setToolTipText("");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(153, 0, 204));
        jLabel28.setText("Warranty Replacement");

        jTextField9.setBackground(java.awt.Color.lightGray);
        jTextField9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTextField9.setForeground(new java.awt.Color(255, 255, 255));
        jTextField9.setText("IMEI Number");

        jTextField10.setBackground(java.awt.Color.lightGray);
        jTextField10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTextField10.setForeground(new java.awt.Color(255, 255, 255));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Warranty Starting Date", "Warranty Ending Date", "Eligibility"
            }
        ));
        jScrollPane5.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel29.setFont(new java.awt.Font("BiomeW01-SemiBold", 1, 16)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(153, 0, 204));
        jLabel29.setText("Eligible Replacements");

        jScrollPane6.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(451, Short.MAX_VALUE))
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jp5Layout = new javax.swing.GroupLayout(jp5);
        jp5.setLayout(jp5Layout);
        jp5Layout.setHorizontalGroup(
            jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp5Layout.createSequentialGroup()
                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jp5Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel14)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jp5Layout.createSequentialGroup()
                                    .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                        .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jp5Layout.createSequentialGroup()
                            .addGap(546, 546, 546)
                            .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jp5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(1039, Short.MAX_VALUE))
            .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jp5Layout.createSequentialGroup()
                    .addGap(0, 1255, Short.MAX_VALUE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(60, 60, 60)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(145, 145, 145)))
        );
        jp5Layout.setVerticalGroup(
            jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp5Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jp5Layout.createSequentialGroup()
                    .addGap(80, 80, 80)
                    .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(604, Short.MAX_VALUE)))
        );

        jTabbedPanel.addTab("Reports", jp5);

        jp6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setFont(new java.awt.Font("Helvetica Neue", 1, 35)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(153, 0, 204));
        jLabel18.setText("REPORTS");

        transaction.setBackground(new java.awt.Color(255, 255, 255));

        jLabel27.setText("From");

        jLabel38.setText("To");

        jLabel39.setText("User ID");

        To_Date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                To_DateActionPerformed(evt);
            }
        });

        From_Date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                From_DateActionPerformed(evt);
            }
        });

        tuserid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tuseridActionPerformed(evt);
            }
        });

        transbuttton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        transbuttton1.setText("Search");
        transbuttton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transbuttton1ActionPerformed(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel41.setText("Search transactions done by a particular user");

        jLabel42.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout transactionLayout = new javax.swing.GroupLayout(transaction);
        transaction.setLayout(transactionLayout);
        transactionLayout.setHorizontalGroup(
            transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionLayout.createSequentialGroup()
                .addGroup(transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(transactionLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(transactionLayout.createSequentialGroup()
                                .addGroup(transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel38)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel39))
                                .addGap(23, 23, 23)
                                .addGroup(transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tuserid, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(transbuttton1)
                                    .addComponent(From_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(To_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(transactionLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(transScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(1098, Short.MAX_VALUE))
        );
        transactionLayout.setVerticalGroup(
            transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel41)
                .addGap(26, 26, 26)
                .addGroup(transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(From_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel38)
                    .addComponent(To_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(transactionLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel39))
                    .addGroup(transactionLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(tuserid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(transbuttton1)
                .addGap(23, 23, 23)
                .addComponent(jLabel42)
                .addGap(18, 18, 18)
                .addComponent(transScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Transaction", transaction);

        Sales.setBackground(new java.awt.Color(255, 255, 255));

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel40.setText("Month and Year");

        monthCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        monthCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthComboActionPerformed(evt);
            }
        });

        salesSub.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        salesSub.setText("Submit");
        salesSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesSubActionPerformed(evt);
            }
        });

        salesAmt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout SalesLayout = new javax.swing.GroupLayout(Sales);
        Sales.setLayout(SalesLayout);
        SalesLayout.setHorizontalGroup(
            SalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SalesLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(SalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(salesAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(SalesLayout.createSequentialGroup()
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(yearSales, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(salesSub)))
                .addContainerGap(1194, Short.MAX_VALUE))
        );
        SalesLayout.setVerticalGroup(
            SalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SalesLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(SalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salesSub)
                    .addComponent(yearSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(salesAmt)
                .addContainerGap(458, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sales", Sales);

        javax.swing.GroupLayout jp6Layout = new javax.swing.GroupLayout(jp6);
        jp6.setLayout(jp6Layout);
        jp6Layout.setHorizontalGroup(
            jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp6Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        jp6Layout.setVerticalGroup(
            jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp6Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
        );

        jTabbedPanel.addTab("Good_Issue", jp6);

        getContentPane().add(jTabbedPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(343, -40, -1, 740));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Stock_AnalysisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Stock_AnalysisMouseClicked
    jTabbedPanel.setSelectedIndex(0);
    Stock_Analysis.setBackground(new Color(89,0,89));
    Invoice.setBackground(new Color(153,0,153));
    Good_Receive.setBackground(new Color(153,0,153));
    Good_Issue.setBackground(new Color(153,0,153));
    Faulty_Return.setBackground(new Color(153,0,153));
    Reports.setBackground(new Color(153,0,153));// TODO add your handling code here:
    }//GEN-LAST:event_Stock_AnalysisMouseClicked

    private void InvoiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InvoiceMouseClicked
    jTabbedPanel.setSelectedIndex(1);
    Invoice.setBackground(new Color(89,0,89));
    Stock_Analysis.setBackground(new Color(153,0,153));
    Good_Receive.setBackground(new Color(153,0,153));
    Good_Issue.setBackground(new Color(153,0,153));
    Faulty_Return.setBackground(new Color(153,0,153));
    Reports.setBackground(new Color(153,0,153));// TODO add your handling code here:
    }//GEN-LAST:event_InvoiceMouseClicked

    private void Good_ReceiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Good_ReceiveMouseClicked
    jTabbedPanel.setSelectedIndex(2);
    Good_Receive.setBackground(new Color(89,0,89));
    Invoice.setBackground(new Color(153,0,153));
    Stock_Analysis.setBackground(new Color(153,0,153));
     Good_Issue.setBackground(new Color(153,0,153));
    Faulty_Return.setBackground(new Color(153,0,153));
    Reports.setBackground(new Color(153,0,153));
    // TODO add your handling code here:
    }//GEN-LAST:event_Good_ReceiveMouseClicked

    private void Good_IssueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Good_IssueMouseClicked
    jTabbedPanel.setSelectedIndex(3);
    Good_Issue.setBackground(new Color(89,0,89));
    Stock_Analysis.setBackground(new Color(153,0,153));
    Faulty_Return.setBackground(new Color(153,0,153));
    Reports.setBackground(new Color(153,0,153));
    Invoice.setBackground(new Color(153,0,153));
    Good_Receive.setBackground(new Color(153,0,153));
    // TODO add your handling code here:
    }//GEN-LAST:event_Good_IssueMouseClicked

    private void Faulty_ReturnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Faulty_ReturnMouseClicked
 jTabbedPanel.setSelectedIndex(4);
 Faulty_Return.setBackground(new Color(89,0,89));
 Reports.setBackground(new Color(153,0,153));
    Invoice.setBackground(new Color(153,0,153));
    Stock_Analysis.setBackground(new Color(153,0,153));
    Good_Receive.setBackground(new Color(153,0,153));
     Good_Issue.setBackground(new Color(153,0,153));
   
// TODO add your handling code here:
    }//GEN-LAST:event_Faulty_ReturnMouseClicked

    private void ReportsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReportsMouseClicked
      jTabbedPanel.setSelectedIndex(5); 
      Reports.setBackground(new Color(89,0,89));
Invoice.setBackground(new Color(153,0,153));
    Good_Receive.setBackground(new Color(153,0,153));
  Stock_Analysis.setBackground(new Color(153,0,153));
    Faulty_Return.setBackground(new Color(153,0,153));
Good_Issue.setBackground(new Color(153,0,153));
   // TODO add your handling code here:
    }//GEN-LAST:event_ReportsMouseClicked

    private void Stock_AnalysisMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Stock_AnalysisMousePressed
// TODO add your handling code here:
    }//GEN-LAST:event_Stock_AnalysisMousePressed

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
jTabbedPanel.setSelectedIndex(0);     // TODO add your handling code here:
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
    SessionManager.isLoggedIn = false;
    Login b6 = new Login();
    b6.setVisible(true);
    this.dispose();         // TODO add your handling code here:
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
  // TODO add your handling code here:
String invoiceNo = jTextField11.getText().trim();

if (invoiceNo.isEmpty()) {
    JOptionPane.showMessageDialog(null, "Please enter an invoice number.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

String query = "SELECT t.time, t.type, p.name AS product_name, tp.quantity, p.unitprice, " +
        "(tp.quantity * p.unitprice) AS price, " +
        "SUM(tp.quantity * p.unitprice) OVER (PARTITION BY i.invid) AS invoice_value, " +
        "u.username " +
        "FROM invoice i " +
        "JOIN transaction t ON i.transID = t.transID " +
        "JOIN transpro tp ON t.transID = tp.transid " +
        "JOIN products p ON tp.pid = p.pid " +
        "JOIN user u ON u.userid = t.userid " +
        "WHERE i.invid = ?";

try (Connection conn = DBConn.getConnection();
     PreparedStatement stmt = conn.prepareStatement(query)) {

    stmt.setInt(1, Integer.parseInt(invoiceNo));
    ResultSet rs = stmt.executeQuery();

    // Create a table model to display the data
    DefaultTableModel model = new DefaultTableModel();

    model.addColumn("Product Name");
    model.addColumn("Quantity");
    model.addColumn("Unit Price");
    model.addColumn("Price");

    String transactionTime = ""; // Variable to store transaction time
    String transactionType = ""; // Variable to store transaction type
    double invoiceValue = 0.0; 
    String username = "";        // Variable to store username

    // Populate the table model with data from the ResultSet
    while (rs.next()) {
        model.addRow(new Object[]{
                rs.getString("product_name"),
                rs.getInt("quantity"),
                rs.getDouble("unitprice"),
                rs.getDouble("price"),
        });
        transactionTime = rs.getString("time");
        transactionType = rs.getString("type"); // Fetch the transaction type
        invoiceValue = rs.getDouble("invoice_value");
        username = rs.getString("username");
    }

    jLabel31.setText("Date and Time: " + transactionTime);
    jLabel32.setText("Invoice no: " + invoiceNo);
    jLabel30.setText("Invoice Value: " + invoiceValue);
    jLabel33.setText("User: " + username);
    jLabel36.setText("Transaction Type: " + transactionType); // Set the transaction type label

    // Create a JTable to display the data
    JTable table = new JTable(model);

    // Set the table inside the JScrollPane
    jScrollPane7.setViewportView(table);

} catch (SQLException ex) {
    ex.printStackTrace();
    JOptionPane.showMessageDialog(null, "Error fetching data: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
} catch (NumberFormatException ex) {
    JOptionPane.showMessageDialog(null, "Invalid invoice number.", "Error", JOptionPane.ERROR_MESSAGE);
}


    }//GEN-LAST:event_jButton4ActionPerformed

    
private void populateGoodTypeComboBox() {
     goodTypeComboBox.removeAllItems();
    String query = "SELECT CatName FROM good";

    try (Connection conn = DBConn.getConnection();
         PreparedStatement stmt = conn.prepareStatement(query);
         ResultSet rs = stmt.executeQuery()) {

        while (rs.next()) {
            String goodType = rs.getString("CatName");
            goodTypeComboBox.addItem(goodType); // Add each category to the comboBox
        }

    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error loading good types: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
}

    
   

    private void goodTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goodTypeComboBoxActionPerformed
        // TODO add your handling code here:
       // Clear previous items in the product combo box
    productComboBox.removeAllItems();

    // Get the selected category from the goodTypeComboBox
    String selectedGoodType = (String) goodTypeComboBox.getSelectedItem();

    if (selectedGoodType != null) {
        String query = "SELECT p.name FROM products p " +
                       "JOIN good g ON p.goodid = g.goodid " +
                       "WHERE g.CatName = ?";

        try (Connection conn = DBConn.getConnection();
             PreparedStatement stmt = conn.prepareStatement(query)) {

            stmt.setString(1, selectedGoodType); // Set the selected category as a parameter
            ResultSet rs = stmt.executeQuery();

            // Add products to the productComboBox
            while (rs.next()) {
                productComboBox.addItem(rs.getString("name"));
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading products: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    }//GEN-LAST:event_goodTypeComboBoxActionPerformed

private DefaultTableModel cartTableModel;  
private JTable cartTable;  


   private void setupCartTable() {
        cartTableModel = new DefaultTableModel(new String[]{"Product", "Category", "Quantity"}, 0);
        cartTable = new JTable(cartTableModel);  // Initialize JTable with the model
        jScrollPane8.setViewportView(cartTable);  // Attach table to JScrollPane
    }
   
   
   private DefaultTableModel cartTableModel2;  
private JTable cartTable2;  


   private void setupCartTable2() {
        cartTableModel2 = new DefaultTableModel(new String[]{"Product", "Category", "Quantity"}, 0);
        cartTable2 = new JTable(cartTableModel2);  // Initialize JTable with the model
        jScrollPane9.setViewportView(cartTable2);  // Attach table to JScrollPane
    }

    
    private void productComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productComboBoxActionPerformed
        // TODO add your handling code here:
        String selectedProduct = (String) productComboBox.getSelectedItem();
    if (selectedProduct != null) {
        // Optional: Implement functionality to fetch and display product details if required.
        System.out.println("Selected product: " + selectedProduct);
    }
    }//GEN-LAST:event_productComboBoxActionPerformed

    private void quantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityFieldActionPerformed
        // TODO add your handling code here:
        String quantityText = quantityField.getText().trim();

    try {
        int quantity = Integer.parseInt(quantityText);
        if (quantity <= 0) {
            JOptionPane.showMessageDialog(this, "Quantity must be a positive number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            quantityField.setText("");
        }
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Invalid quantity entered. Please enter a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
        quantityField.setText("");
    }
    }//GEN-LAST:event_quantityFieldActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
         String selectedProduct = (String) productComboBox.getSelectedItem();
    String selectedCategory = (String) goodTypeComboBox.getSelectedItem();
    int quantity;

    try {
        quantity = Integer.parseInt(quantityField.getText().trim());
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Please enter a valid quantity.", "Input Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (selectedProduct == null || selectedCategory == null || quantity <= 0) {
        JOptionPane.showMessageDialog(this, "Invalid selection or quantity.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Add to cart table
    cartTableModel.addRow(new Object[]{selectedProduct, selectedCategory, quantity});

    


    }//GEN-LAST:event_addButtonActionPerformed

    private void revieveGoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revieveGoodActionPerformed
        // TODO add your handling code here:
        if (cartTableModel.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "The cart is empty.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String productQuery = "SELECT pid, stock FROM products WHERE name = ?";
    String insertTransactionQuery = "INSERT INTO transaction (time, totalprice, userid, type) VALUES (NOW(), 0, ?, 'receive')";
    String insertInvoiceQuery = "INSERT INTO invoice (transID, type) VALUES (?, 'receive')";
    String insertTransProQuery = "INSERT INTO transpro (pid, transid, quantity) VALUES (?, ?, ?)";
    String updateStockQuery = "UPDATE products SET stock = stock + ? WHERE pid = ?";

    try (Connection conn = DBConn.getConnection()) {
        conn.setAutoCommit(false); // Begin transaction

        // Insert into transaction table
        int transactionID = 0;
        try (PreparedStatement stmt = conn.prepareStatement(insertTransactionQuery, Statement.RETURN_GENERATED_KEYS)) {
            stmt.setInt(1, SessionManager.getUserID());
            stmt.executeUpdate();
            ResultSet rs = stmt.getGeneratedKeys();
            if (rs.next()) {
                transactionID = rs.getInt(1); // Get the generated transaction ID
            } else {
                throw new SQLException("Transaction creation failed.");
            }
        }

        // Insert into invoice table
        int invoiceID = 0;
        try (PreparedStatement stmt = conn.prepareStatement(insertInvoiceQuery, Statement.RETURN_GENERATED_KEYS)) {
            stmt.setInt(1, transactionID); // Use the transaction ID for the invoice
            stmt.executeUpdate();
            ResultSet rs = stmt.getGeneratedKeys();
            if (rs.next()) {
                invoiceID = rs.getInt(1); // Get the generated invoice ID (invid)
            } else {
                throw new SQLException("Invoice creation failed.");
            }
        }

        // Process each item in the cart
        for (int i = 0; i < cartTableModel.getRowCount(); i++) {
            String productName = (String) cartTableModel.getValueAt(i, 0);
            int quantity = (int) cartTableModel.getValueAt(i, 2);

            // Get product ID and current stock
            int productID = 0;
            try (PreparedStatement stmt = conn.prepareStatement(productQuery)) {
                stmt.setString(1, productName);
                ResultSet rs = stmt.executeQuery();
                if (rs.next()) {
                    productID = rs.getInt("pid");
                } else {
                    throw new SQLException("Product not found: " + productName);
                }
            }

            // Insert into transpro table
            try (PreparedStatement stmt = conn.prepareStatement(insertTransProQuery)) {
                stmt.setInt(1, productID);
                stmt.setInt(2, transactionID);
                stmt.setInt(3, quantity);
                stmt.executeUpdate();
            }

            // Update stock
            try (PreparedStatement stmt = conn.prepareStatement(updateStockQuery)) {
                stmt.setInt(1, quantity);
                stmt.setInt(2, productID);
                stmt.executeUpdate();
            }
        }

        conn.commit(); // Commit transaction
        cartTableModel.setRowCount(0); // Clear the cart
        JOptionPane.showMessageDialog(this, "All items received successfully. Invoice No: " + invoiceID, "Success", JOptionPane.INFORMATION_MESSAGE);
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error processing transaction: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_revieveGoodActionPerformed

    private void populateGoodTypeComboBox2() {
     goodTypeComboBox2.removeAllItems();
    String query = "SELECT CatName FROM good";

    try (Connection conn = DBConn.getConnection();
         PreparedStatement stmt = conn.prepareStatement(query);
         ResultSet rs = stmt.executeQuery()) {

        while (rs.next()) {
            String goodType = rs.getString("CatName");
            goodTypeComboBox2.addItem(goodType); // Add each category to the comboBox
        }

    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error loading good types: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
}

    
    
    
    
    private void goodTypeComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goodTypeComboBox2ActionPerformed
        // TODO add your handling code here:
        productComboBox2.removeAllItems();

    // Get the selected category from the goodTypeComboBox
    String selectedGoodType2 = (String) goodTypeComboBox2.getSelectedItem();

    if (selectedGoodType2 != null) {
        String query = "SELECT p.name FROM products p " +
                       "JOIN good g ON p.goodid = g.goodid " +
                       "WHERE g.CatName = ?";

        try (Connection conn = DBConn.getConnection();
             PreparedStatement stmt = conn.prepareStatement(query)) {

            stmt.setString(1, selectedGoodType2); // Set the selected category as a parameter
            ResultSet rs = stmt.executeQuery();

            // Add products to the productComboBox
            while (rs.next()) {
                productComboBox2.addItem(rs.getString("name"));
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading products: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_goodTypeComboBox2ActionPerformed

    private void productComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productComboBox2ActionPerformed
        // TODO add your handling code here:
      String selectedProduct2 = (String) productComboBox2.getSelectedItem();
    if (selectedProduct2 != null) {
        try (Connection conn = DBConn.getConnection()) {
            String query = "SELECT stock FROM products WHERE name = ?";
            try (PreparedStatement stmt = conn.prepareStatement(query)) {
                stmt.setString(1, selectedProduct2);
                ResultSet rs = stmt.executeQuery();

                if (rs.next()) {
                    int stock = rs.getInt("stock");
                    stockCount.setText("Current stock: " + stock);
                } else {
                    stockCount.setText("Current Stock: 0");
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error fetching stock: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_productComboBox2ActionPerformed

    private void quantityField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityField2ActionPerformed
        // TODO add your handling code here:
        String quantityText2 = quantityField2.getText().trim();

    try {
        int quantity = Integer.parseInt(quantityText2);
        if (quantity <= 0) {
            JOptionPane.showMessageDialog(this, "Quantity must be a positive number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            quantityField2.setText("");
        }
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Invalid quantity entered. Please enter a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
        quantityField2.setText("");
    }
    }//GEN-LAST:event_quantityField2ActionPerformed

    private void addButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButton2ActionPerformed
        // TODO add your handling code here:
       String selectedProduct2 = (String) productComboBox2.getSelectedItem();
String selectedCategory2 = (String) goodTypeComboBox2.getSelectedItem();
int quantity2;

try {
    quantity2 = Integer.parseInt(quantityField2.getText().trim());
} catch (NumberFormatException ex) {
    JOptionPane.showMessageDialog(this, "Please enter a valid quantity.", "Input Error", JOptionPane.ERROR_MESSAGE);
    return;
}

if (selectedProduct2 == null || selectedCategory2 == null || quantity2 <= 0) {
    JOptionPane.showMessageDialog(this, "Invalid selection or quantity.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

String checkStockQuery = "SELECT stock FROM products WHERE name = ?";
try (Connection conn = DBConn.getConnection();
     PreparedStatement stmt = conn.prepareStatement(checkStockQuery)) {
    stmt.setString(1, selectedProduct2);
    ResultSet rs = stmt.executeQuery();

    if (rs.next()) {
        int availableStock = rs.getInt("stock");
        if (availableStock < quantity2) {
            JOptionPane.showMessageDialog(this, "Insufficient stock available. Current stock: " + availableStock, "Stock Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    } else {
        JOptionPane.showMessageDialog(this, "Product not found in inventory.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
} catch (SQLException ex) {
    ex.printStackTrace();
    JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

// Add to cart table
cartTableModel2.addRow(new Object[]{selectedProduct2, selectedCategory2, quantity2});

    }//GEN-LAST:event_addButton2ActionPerformed

    private void issueGoodsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueGoodsActionPerformed
        // TODO add your handling code here:
            if (cartTableModel2.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "The cart is empty.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String productQuery = "SELECT pid, stock FROM products WHERE name = ?";
    String insertTransactionQuery = "INSERT INTO transaction (time, totalprice, userid, type) VALUES (NOW(), 0, ?, 'issue')";
    String insertInvoiceQuery = "INSERT INTO invoice (transID, type) VALUES (?, 'issue')";
    String insertTransProQuery = "INSERT INTO transpro (pid, transid, quantity) VALUES (?, ?, ?)";
    String updateStockQuery = "UPDATE products SET stock = stock - ? WHERE pid = ?";

    try (Connection conn = DBConn.getConnection()) {
        conn.setAutoCommit(false); // Begin transaction

        // Insert into transaction table
        int transactionID = 0;
        try (PreparedStatement stmt = conn.prepareStatement(insertTransactionQuery, Statement.RETURN_GENERATED_KEYS)) {
            stmt.setInt(1, SessionManager.getUserID());
            stmt.executeUpdate();
            ResultSet rs = stmt.getGeneratedKeys();
            if (rs.next()) {
                transactionID = rs.getInt(1); // Get the generated transaction ID
            } else {
                throw new SQLException("Transaction creation failed.");
            }
        }

        // Insert into invoice table
        int invoiceID = 0;
        try (PreparedStatement stmt = conn.prepareStatement(insertInvoiceQuery, Statement.RETURN_GENERATED_KEYS)) {
            stmt.setInt(1, transactionID); // Use the transaction ID for the invoice
            stmt.executeUpdate();
            ResultSet rs = stmt.getGeneratedKeys();
            if (rs.next()) {
                invoiceID = rs.getInt(1); // Get the generated invoice ID (invid)
            } else {
                throw new SQLException("Invoice creation failed.");
            }
        }

        // Process each item in the cart
        for (int i = 0; i < cartTableModel2.getRowCount(); i++) {
            String productName = (String) cartTableModel2.getValueAt(i, 0);
            int quantity = (int) cartTableModel2.getValueAt(i, 2);

            // Get product ID and current stock
            int productID = 0;
            int currentStock = 0;
            try (PreparedStatement stmt = conn.prepareStatement(productQuery)) {
                stmt.setString(1, productName);
                ResultSet rs = stmt.executeQuery();
                if (rs.next()) {
                    productID = rs.getInt("pid");
                    currentStock = rs.getInt("stock");
                } else {
                    throw new SQLException("Product not found: " + productName);
                }
            }

            if (currentStock < quantity) {
                throw new SQLException("Insufficient stock for product: " + productName);
            }

            // Insert into transpro table
            try (PreparedStatement stmt = conn.prepareStatement(insertTransProQuery)) {
                stmt.setInt(1, productID);
                stmt.setInt(2, transactionID);
                stmt.setInt(3, quantity);
                stmt.executeUpdate();
            }

            // Update stock
            try (PreparedStatement stmt = conn.prepareStatement(updateStockQuery)) {
                stmt.setInt(1, quantity);
                stmt.setInt(2, productID);
                stmt.executeUpdate();
            }
        }

        conn.commit(); // Commit transaction
        cartTableModel2.setRowCount(0); // Clear the cart
        JOptionPane.showMessageDialog(this, "All items issued successfully. Invoice No: " + invoiceID, "Success", JOptionPane.INFORMATION_MESSAGE);
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error processing transaction: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_issueGoodsActionPerformed

    private void reset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset1ActionPerformed
        // TODO add your handling code here:
         int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to clear the cart?", 
                    "Confirm Reset", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        cartTableModel.setRowCount(0);  // Clear all rows from the cart table
        
    }
    }//GEN-LAST:event_reset1ActionPerformed

    private void reset2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset2ActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to clear the cart?", 
                    "Confirm Reset", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        cartTableModel2.setRowCount(0);  // Clear all rows from the second cart table
        
    }
    }//GEN-LAST:event_reset2ActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
     // TODO add your handling code here:
     String invoiceNo = jTextField11.getText().trim();
    
    if (invoiceNo.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please enter an invoice number.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    try {
        // Define folder to save PDFs
        String folderName = "invoice";  // Folder name in the project directory
        File dir = new File(folderName);

        // Create folder if it doesn't exist
        if (!dir.exists()) {
            dir.mkdir();
        }

        // PDF save path
        String outputPath = dir + File.separator + "Invoice_" + invoiceNo + ".pdf";

        // Create PDF document
        Document document = new Document(PageSize.A4);
        PdfWriter.getInstance(document, new FileOutputStream(outputPath));
        document.open();

        // Add title
        Paragraph title = new Paragraph("INVOICE");
        title.setAlignment(Element.ALIGN_CENTER);
        document.add(title);

        document.add(new Paragraph("Invoice No: " + invoiceNo));
        document.add(new Paragraph(jLabel31.getText()));  // Date and time
        document.add(new Paragraph(jLabel33.getText()));  // User
        document.add(new Paragraph(jLabel36.getText()));  // Transaction type

        // Get user name from SessionManager
        int userID = SessionManager.getUserID();
        String userName = getUserNameById(userID);  // Custom method to fetch user name from DB or other source

        // Add user name below the transaction type
        document.add(new Paragraph("Printed by: " + userName));

        document.add(new Paragraph("\n"));  // Space

        // Extract table data from JScrollPane
        JTable table = (JTable) jScrollPane7.getViewport().getView();
        TableModel model = table.getModel();

        PdfPTable pdfTable = new PdfPTable(model.getColumnCount());

        // Add table headers
        for (int i = 0; i < model.getColumnCount(); i++) {
            pdfTable.addCell(model.getColumnName(i));
        }

        // Add table data
        for (int row = 0; row < model.getRowCount(); row++) {
            for (int col = 0; col < model.getColumnCount(); col++) {
                pdfTable.addCell(model.getValueAt(row, col).toString());
            }
        }

        document.add(pdfTable);

        // Add total price
        String totalPrice = jLabel30.getText();  // Invoice value label
        Paragraph total = new Paragraph("\nTotal Price: " + totalPrice);
        total.setAlignment(Element.ALIGN_RIGHT);
        document.add(total);

        document.close();

        JOptionPane.showMessageDialog(null, "Invoice saved as PDF: " + outputPath, "Success", JOptionPane.INFORMATION_MESSAGE);

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error creating PDF: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

// Custom method to fetch user name from database using userID
private String getUserNameById(int userID) {
    String userName = "";
    String query = "SELECT username FROM user WHERE userid = ?"; // Assuming 'user' table contains 'username' and 'userid'

    try (Connection conn = DBConn.getConnection();
         PreparedStatement stmt = conn.prepareStatement(query)) {

        stmt.setInt(1, userID);
        ResultSet rs = stmt.executeQuery();

        if (rs.next()) {
            userName = rs.getString("username");
        }

    } catch (Exception e) {
        e.printStackTrace();
    }

    return userName;
    }//GEN-LAST:event_printButtonActionPerformed

    private void To_DateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_To_DateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_To_DateActionPerformed

    private void From_DateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_From_DateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_From_DateActionPerformed

    private void tuseridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tuseridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tuseridActionPerformed
// Get date from DateChooser and format it

    private void transbuttton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transbuttton1ActionPerformed
        // TODO add your handling code here:
      try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/epos", "root", "");
        SimpleDateFormat inputFormat = new SimpleDateFormat("dd-MM-yyyy");
        SimpleDateFormat dbFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        String fromDateFormatted = dbFormat.format(inputFormat.parse(From_Date.getText()));
        String toDateFormatted = dbFormat.format(inputFormat.parse(To_Date.getText()));

        // Fetching the username for the given userID
        String userQuery = "SELECT username FROM user WHERE userID = ?";
        PreparedStatement userStmt = conn.prepareStatement(userQuery);
        userStmt.setInt(1, Integer.parseInt(tuserid.getText()));
        ResultSet userRs = userStmt.executeQuery();
        if (userRs.next()) {
            jLabel42.setText("Username: " + userRs.getString("username"));
        }
        userRs.close();
        userStmt.close();

        // Fetching the transaction details with ascending order of invoice number
        String query = "SELECT t.transID, t.time, p.name, tp.quantity, (p.unitprice * tp.quantity) AS totalprice, t.type " +
                       "FROM transaction t " +
                       "JOIN transpro tp ON t.transID = tp.transid " +
                       "JOIN products p ON tp.pid = p.pid " +
                       "WHERE t.userid = ? AND t.time BETWEEN ? AND ? " +
                       "ORDER BY t.transID ASC";

        PreparedStatement stmt = conn.prepareStatement(query);
        stmt.setInt(1, Integer.parseInt(tuserid.getText()));
        stmt.setString(2, fromDateFormatted);
        stmt.setString(3, toDateFormatted);

        ResultSet rs = stmt.executeQuery();

        String[] columnNames = {"Invoice Number", "Date", "Product", "Quantity", "Total Amount", "Type"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        while (rs.next()) {
            model.addRow(new Object[]{rs.getInt("transID"), rs.getString("time"), rs.getString("name"), rs.getInt("quantity"), rs.getBigDecimal("totalprice"), rs.getString("type")});
        }

        JTable table = new JTable(model);
        transScroll.setViewportView(table);

        rs.close();
        stmt.close();
        conn.close();
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
    }
    }//GEN-LAST:event_transbuttton1ActionPerformed

    private void salesSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesSubActionPerformed
        // TODO add your handling code here:
        try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/epos", "root", "");
        String selectedMonth = monthCombo.getSelectedItem().toString();
        String yearInput = yearSales.getText().trim();

        // Validate year input
        int year;
        try {
            year = Integer.parseInt(yearInput);
            if (year < 2020 || year > 2025) {
                JOptionPane.showMessageDialog(null, "Year must be between 2020 and 2025.");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid year entered. Please enter a valid year.");
            return;
        }

        // Mapping month name to numerical representation using a switch case
        String monthNumber;
        switch (selectedMonth) {
            case "January": monthNumber = "01"; break;
            case "February": monthNumber = "02"; break;
            case "March": monthNumber = "03"; break;
            case "April": monthNumber = "04"; break;
            case "May": monthNumber = "05"; break;
            case "June": monthNumber = "06"; break;
            case "July": monthNumber = "07"; break;
            case "August": monthNumber = "08"; break;
            case "September": monthNumber = "09"; break;
            case "October": monthNumber = "10"; break;
            case "November": monthNumber = "11"; break;
            case "December": monthNumber = "12"; break;
            default: 
                JOptionPane.showMessageDialog(null, "Invalid month selected.");
                return;
        }

        // SQL query to calculate total sales for the selected month and year from transpro table
        String query = "SELECT SUM(tp.quantity * p.unitprice) AS totalSales " +
                       "FROM transpro tp " +
                       "JOIN transaction t ON tp.transid = t.transID " +
                       "JOIN products p ON tp.pid = p.pid " +
                       "WHERE MONTH(t.time) = ? AND YEAR(t.time) = ?";

        PreparedStatement stmt = conn.prepareStatement(query);
        stmt.setString(1, monthNumber);
        stmt.setInt(2, year);

        ResultSet rs = stmt.executeQuery();
        if (rs.next()) {
            double totalSales = rs.getDouble("totalSales");
            salesAmt.setText("Total Sales: " + totalSales);
        }

        rs.close();
        stmt.close();
        conn.close();
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
    }
    }//GEN-LAST:event_salesSubActionPerformed

    private void monthComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
            
        });
    }
    
    public void showBarChart() {
    int routerCount = 0;
    int decCount = 0;
    int telCount = 0;
    try (Connection conn = DBConn.getConnection()) {
    // Query to retrieve username based on userID
    String query = "SELECT username FROM user WHERE userID = ?";
    try (PreparedStatement stmt = conn.prepareStatement(query)) {
        stmt.setInt(1, SessionManager.getUserID()); // Get userID from SessionManager
        ResultSet rs = stmt.executeQuery();

        if (rs.next()) {
            String username = rs.getString("username");
            jLabel37.setText("Hello, " + username + "!");
        } else {
            jLabel37.setText("Hello, User!"); // Default text if no user found
        }
    }
} catch (Exception e) {
    e.printStackTrace();
    jLabel37.setText("Hello, User!"); // Handle errors
}


    // SQL query to retrieve stock counts
    String query = "SELECT g.goodid, g.CatName, SUM(p.stock) AS TotalStock " +
                   "FROM good g " +
                   "LEFT JOIN products p ON g.goodid = p.goodid " +
                   "GROUP BY g.goodid, g.CatName";

    try (Connection conn = DBConn.getConnection();
         PreparedStatement stmt = conn.prepareStatement(query);
         ResultSet rs = stmt.executeQuery()) {

        while (rs.next()) {
            String category = rs.getString("CatName");
            int stock = rs.getInt("TotalStock");

            // Assign stock counts to respective variables
            if ("Router".equalsIgnoreCase(category)) {
                routerCount = stock;
            } else if ("decoder".equalsIgnoreCase(category)) {
                decCount = stock;
            } else if ("Telephone".equalsIgnoreCase(category)) {
                telCount = stock;
            }
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    }

    // Create the dataset
    DefaultCategoryDataset dataset = new DefaultCategoryDataset();
    dataset.setValue(routerCount, "Amount", "Routers");
    dataset.setValue(decCount, "Amount", "Decoders");
    dataset.setValue(telCount, "Amount", "Telephones");

    // Create the bar chart
    JFreeChart chart = ChartFactory.createBarChart(
        "Overall Stock Analysis",   // Chart title
        "Inventory",                // X-axis label
        "Amount",                   // Y-axis label
        dataset,                    // Data
        PlotOrientation.VERTICAL,   // Orientation
        false,                      // Include legend
        true,                       // Tooltips
        false                       // URLs
    );

    // Customize the chart
    CategoryPlot categoryPlot = chart.getCategoryPlot();
    categoryPlot.setBackgroundPaint(Color.WHITE); // Background color
    categoryPlot.setRangeGridlinePaint(Color.GRAY); // Gridline color

    // Customize the renderer
    BarRenderer renderer = (BarRenderer) categoryPlot.getRenderer();
    Color barColor = new Color(153, 0, 204);
    renderer.setSeriesPaint(0, barColor);

    // Customize chart title font
    chart.getTitle().setFont(new Font("SansSerif", Font.BOLD, 18));
    chart.getTitle().setPaint(new Color(0, 102, 204)); // Title color

    // Customize axis fonts
    categoryPlot.getDomainAxis().setLabelFont(new Font("SansSerif", Font.BOLD, 14));
    categoryPlot.getDomainAxis().setTickLabelFont(new Font("SansSerif", Font.PLAIN, 12));
    categoryPlot.getRangeAxis().setLabelFont(new Font("SansSerif", Font.BOLD, 14));
    categoryPlot.getRangeAxis().setTickLabelFont(new Font("SansSerif", Font.PLAIN, 12));

    // Add the chart to a panel
    ChartPanel barChartPanel = new ChartPanel(chart);
    barChartPanel.setPreferredSize(new Dimension(800, 600)); // Set size
    barChartPanel.setBackground(Color.LIGHT_GRAY); // Panel background

    // Display the chart in a JPanel (replace StockAnal with your panel name)
    StockAnal.removeAll();
    StockAnal.setLayout(new BorderLayout());
    StockAnal.add(barChartPanel, BorderLayout.CENTER);
    StockAnal.validate();
}

    
    public void showLineChart(){
        //create dataset for the graph
         DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(200, "Amount", "Jan");
        dataset.setValue(0, "Amount", "Feb");
        dataset.setValue(0, "Amount", "Mar");
        dataset.setValue(0, "Amount", "Apr");
        dataset.setValue(0, "Amount", "May");
        dataset.setValue(0, "Amount", "Ju");
        dataset.setValue(0, "Amount", "Jly");
        dataset.setValue(0, "Amount", "Aug");
        dataset.setValue(0, "Amount", "Sep");
        dataset.setValue(0, "Amount", "Oct");
        dataset.setValue(0, "Amount", "Nov");
        dataset.setValue(0, "Amount", "Dec");
        
        //create chart
        JFreeChart linechart = ChartFactory.createLineChart("Sales & Profit, 2025","Month","Amount", 
                dataset, PlotOrientation.VERTICAL, false,true,false);
        
        //create plot object
         CategoryPlot lineCategoryPlot = linechart.getCategoryPlot();
       // lineCategoryPlot.setRangeGridlinePaint(Color.BLUE);
        lineCategoryPlot.setBackgroundPaint(Color.white);
        
        //create render object to change the moficy the line properties like color
        LineAndShapeRenderer lineRenderer = (LineAndShapeRenderer) lineCategoryPlot.getRenderer();
        Color lineChartColor = new Color(204,0,51);
        lineRenderer.setSeriesPaint(0, lineChartColor);
        
         //create chartPanel to display chart(graph)
        ChartPanel lineChartPanel = new ChartPanel(linechart);
        SalesProfit.removeAll();
        SalesProfit.add(lineChartPanel, BorderLayout.CENTER);
        SalesProfit.validate();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Faulty_Return;
    private javax.swing.JTextField From_Date;
    private javax.swing.JPanel Good_Issue;
    private javax.swing.JPanel Good_Receive;
    private javax.swing.JPanel Invoice;
    private javax.swing.JPanel Reports;
    private javax.swing.JPanel Sales;
    private javax.swing.JPanel SalesProfit;
    private javax.swing.JPanel StockAnal;
    private javax.swing.JPanel Stock_Analysis;
    private javax.swing.JTextField To_Date;
    private javax.swing.JButton addButton;
    private javax.swing.JButton addButton2;
    private com.raven.datechooser.DateChooser from_date;
    private javax.swing.JComboBox<String> goodTypeComboBox;
    private javax.swing.JComboBox<String> goodTypeComboBox2;
    private javax.swing.JButton issueGoods;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPanel;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JPanel jp1;
    private javax.swing.JPanel jp2;
    private javax.swing.JPanel jp3;
    private javax.swing.JPanel jp4;
    private javax.swing.JPanel jp5;
    private javax.swing.JPanel jp6;
    private javax.swing.JComboBox<String> monthCombo;
    private javax.swing.JButton printButton;
    private javax.swing.JComboBox<String> productComboBox;
    private javax.swing.JComboBox<String> productComboBox2;
    private javax.swing.JTextField quantityField;
    private javax.swing.JTextField quantityField2;
    private javax.swing.JButton reset1;
    private javax.swing.JButton reset2;
    private javax.swing.JButton revieveGood;
    private javax.swing.JLabel salesAmt;
    private javax.swing.JButton salesSub;
    private javax.swing.JLabel stockCount;
    private com.raven.datechooser.DateChooser to_date;
    private javax.swing.JScrollPane transScroll;
    private javax.swing.JPanel transaction;
    private javax.swing.JButton transbuttton1;
    private javax.swing.JTextField tuserid;
    private javax.swing.JTextField yearSales;
    // End of variables declaration//GEN-END:variables

    private static class jTabbedPanel {

        private static void setSelectedIndex(int i) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        public jTabbedPanel() {
        }
    }
}
